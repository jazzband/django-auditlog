# Generated by Django 3.2.13 on 2022-09-20 18:44

import uuid

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="AltPrimaryKeyModel",
            fields=[
                (
                    "key",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("text", models.TextField(blank=True)),
                ("boolean", models.BooleanField(default=False)),
                ("integer", models.IntegerField(blank=True, null=True)),
                ("datetime", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="CharfieldTextfieldModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("longchar", models.CharField(max_length=255)),
                ("longtextfield", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="ChoicesFieldModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("r", "Red"), ("y", "Yellow"), ("g", "Green")],
                        max_length=1,
                    ),
                ),
                (
                    "multiplechoice",
                    models.CharField(
                        choices=[("r", "Red"), ("y", "Yellow"), ("g", "Green")],
                        max_length=255,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DateTimeFieldModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField()),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("naive_dt", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="JSONModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("json", models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name="ManyRelatedOtherModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NoDeleteHistoryModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("integer", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="PostgresArrayFieldModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "arrayfield",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[("r", "Red"), ("y", "Yellow"), ("g", "Green")],
                            max_length=1,
                        ),
                        size=3,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectPolymorphicModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("topic", models.CharField(max_length=30)),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_auditlog_tests.projectpolymorphicmodel_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="RelatedModelParent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SerializeOnlySomeOfThisModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("this", models.CharField(max_length=24)),
                ("not_this", models.CharField(max_length=24)),
            ],
        ),
        migrations.CreateModel(
            name="SerializeThisModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=24, unique=True)),
                ("timestamp", models.DateTimeField()),
                ("nullable", models.IntegerField(null=True)),
                ("nested", models.JSONField()),
                ("mask_me", models.CharField(max_length=255, null=True)),
                ("code", models.UUIDField(null=True)),
                ("date", models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="SimpleExcludeModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=100)),
                ("text", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="SimpleIncludeModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=100)),
                ("text", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="SimpleMappingModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sku", models.CharField(max_length=100)),
                ("vtxt", models.CharField(max_length=100, verbose_name="Version")),
                ("not_mapped", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="SimpleMaskedModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.CharField(max_length=100)),
                ("text", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="SimpleModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(blank=True)),
                ("boolean", models.BooleanField(default=False)),
                ("integer", models.IntegerField(blank=True, null=True)),
                ("datetime", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="UUIDPrimaryKeyModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("text", models.TextField(blank=True)),
                ("boolean", models.BooleanField(default=False)),
                ("integer", models.IntegerField(blank=True, null=True)),
                ("datetime", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ArtProjectPolymorphicModel",
            fields=[
                (
                    "projectpolymorphicmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="auditlog_tests.projectpolymorphicmodel",
                    ),
                ),
                ("artist", models.CharField(max_length=30)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("auditlog_tests.projectpolymorphicmodel",),
        ),
        migrations.CreateModel(
            name="SerializePrimaryKeyRelatedModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subheading", models.CharField(max_length=255)),
                ("value", models.IntegerField()),
                (
                    "serialize_this",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auditlog_tests.serializethismodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SerializeNaturalKeyRelatedModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subheading", models.CharField(max_length=255)),
                ("value", models.IntegerField()),
                (
                    "serialize_this",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auditlog_tests.serializethismodel",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="projectpolymorphicmodel",
            name="relation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="parent_poly",
                to="auditlog_tests.simplemodel",
            ),
        ),
        migrations.CreateModel(
            name="ManyRelatedModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recursive",
                    models.ManyToManyField(
                        related_name="_auditlog_tests_manyrelatedmodel_recursive_+",
                        to="auditlog_tests.ManyRelatedModel",
                    ),
                ),
                (
                    "related",
                    models.ManyToManyField(
                        related_name="related",
                        to="auditlog_tests.ManyRelatedOtherModel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdditionalDataIncludedModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=100)),
                ("text", models.TextField(blank=True)),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auditlog_tests.simplemodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProxyModel",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("auditlog_tests.simplemodel",),
        ),
        migrations.CreateModel(
            name="RelatedModel",
            fields=[
                (
                    "relatedmodelparent_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="auditlog_tests.relatedmodelparent",
                    ),
                ),
                (
                    "one_to_one",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reverse_one_to_one",
                        to="auditlog_tests.simplemodel",
                    ),
                ),
                (
                    "related",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_models",
                        to="auditlog_tests.simplemodel",
                    ),
                ),
            ],
            bases=("auditlog_tests.relatedmodelparent",),
        ),
    ]
